pub fn convert(s: &str) -> String {
    let newname = base64::encode(s.as_bytes());
    newname.chars().map(map).collect::<String>()
}

fn map(c: char) -> &'static str {
    match c {
        'A' => "\u{16A0}",
        'B' => "\u{16A1}",
        'C' => "\u{16A2}",
        'D' => "\u{16A3}",
        'E' => "\u{16A4}",
        'F' => "\u{16A5}",
        'G' => "\u{16A6}",
        'H' => "\u{16A7}",
        'I' => "\u{16A8}",
        'J' => "\u{16A9}",
        'K' => "\u{16AA}",
        'L' => "\u{16AB}",
        'M' => "\u{16AC}",
        'N' => "\u{16AD}",
        'O' => "\u{16AE}",
        'P' => "\u{16AF}",
        'Q' => "\u{16B0}",
        'R' => "\u{16B1}",
        'S' => "\u{16B2}",
        'T' => "\u{16B3}",
        'U' => "\u{16B4}",
        'V' => "\u{16B5}",
        'W' => "\u{16B6}",
        'X' => "\u{16B7}",
        'Y' => "\u{16B8}",
        'Z' => "\u{16B9}",
        'a' => "\u{16BA}",
        'b' => "\u{16BB}",
        'c' => "\u{16BC}",
        'd' => "\u{16BD}",
        'e' => "\u{16BE}",
        'f' => "\u{16BF}",
        'g' => "\u{16C0}",
        'h' => "\u{16C1}",
        'i' => "\u{16C2}",
        'j' => "\u{16C3}",
        'k' => "\u{16C4}",
        'l' => "\u{16C0}",
        'm' => "\u{16C0}",
        'n' => "\u{16C0}",
        'o' => "\u{16C5}",
        'p' => "\u{16C6}",
        'q' => "\u{16C7}",
        'r' => "\u{16C8}",
        's' => "\u{16C9}",
        't' => "\u{16CA}",
        'u' => "\u{16CB}",
        'v' => "\u{16CC}",
        'w' => "\u{16CD}",
        'x' => "\u{16CE}",
        'y' => "\u{16CF}",
        'z' => "\u{16D0}",
        '0' => "\u{16D1}",
        '1' => "\u{16D2}",
        '2' => "\u{16D3}",
        '3' => "\u{16D4}",
        '4' => "\u{16D5}",
        '5' => "\u{16D6}",
        '6' => "\u{16D7}",
        '7' => "\u{16D8}",
        '8' => "\u{16D9}",
        '9' => "\u{16DA}",
        '+' => "\u{16DB}",
        '/' => "\u{16DC}",
        '=' => "\u{16DD}",
        c => panic!("{}", c),
    }
}
